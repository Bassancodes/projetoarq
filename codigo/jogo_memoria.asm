
ORG 0000H
    LJMP INICIO

ORG 0100H
INICIO:
    MOV SP, #60H
    MOV R7, #0 ; Semente
    ; ACALL INICIALIZAR_LCD
    ; ACALL MOSTRAR_MSG_INICIAL

AGUARDA_INICIO:
    ACALL LER_TECLA_VALIDA
    CJNE A, #0, AGUARDA_INICIO ; Espera tecla 1 (convertido para 0)

NOVO_JOGO:
    MOV R6, #1 ; n√≠vel atual

PROXIMA_RODADA:
    ACALL GERAR_ITEM
    ACALL MOSTRAR_SEQUENCIA
    ACALL LER_RESPOSTA
    ACALL COMPARAR

    JC ERROU
    ACALL MOSTRAR_MSG_ACERTO
    INC R6
    CJNE R6, #11, PROXIMA_RODADA
    ACALL MOSTRAR_MSG_VITORIA
    SJMP NOVO_JOGO

ERROU:
    ACALL MOSTRAR_MSG_ERRO
    SJMP NOVO_JOGO

; ---------------------------------------------------
GERAR_ITEM:
    INC R7
    MOV A, R7
    ANL A, #03H
    CJNE A, #3, OK
    MOV A, #2
OK:
    MOV B, R6
    DEC B
    ADD A, #30H
    ADD A, B
    MOV R0, A
    MOV A, R7
    MOV @R0, A
    RET

MOSTRAR_SEQUENCIA:
    MOV R1, #0
SEQLP:
    MOV A, R1
    MOV B, R6
    CJNE A, B, CONT
    RET
CONT:
    MOV B, A
    ADD A, #30H
    MOV R0, A
    MOV A, @R0
    ANL A, #03H
    CJNE A, #0, L1
    CLR P1.0
    SETB P1.1
    SETB P1.2
    SJMP MOSTRA
L1: CJNE A, #1, L2
    SETB P1.0
    CLR P1.1
    SETB P1.2
    SJMP MOSTRA
L2:
    SETB P1.0
    SETB P1.1
    CLR P1.2
MOSTRA:
    ACALL DELAY_SIMPLES
    SETB P1.0
    SETB P1.1
    SETB P1.2
    ACALL DELAY_SIMPLES
    INC R1
    SJMP SEQLP

LER_RESPOSTA:
    MOV R1, #0
LERLP:
    MOV A, R1
    MOV B, R6
    CJNE A, B, LER_CONT
    RET
LER_CONT:
    ACALL LER_TECLA_VALIDA
    MOV B, R1
    ADD A, #50H
    ADD A, B
    MOV R0, A
    MOV @R0, A
    INC R1
    SJMP LERLP

COMPARAR:
    CLR C
    MOV R1, #0
CMP_LP:
    MOV A, R1
    MOV B, R6
    CJNE A, B, CMP_CONT
    RET
CMP_CONT:
    MOV A, R1
    ADD A, #30H
    MOV R0, A
    MOV A, @R0
    ADD A, #20H
    MOV R2, A
    MOV R0, R2
    MOV A, @R0
    MOV B, R7
    CJNE A, B, FIM_COMPARAR
    SETB C
    RET
    INC R1
    SJMP CMP_LP

LER_TECLA_VALIDA:
WAIT:
    ACALL ROTINA_LE_TECLADO
    CJNE A, #0FFH, GOT
    SJMP WAIT
GOT:
    CJNE A, #1, CHK2
    MOV A, #0
    RET
CHK2:
    CJNE A, #2, CHK3
    MOV A, #1
    RET
CHK3:
    CJNE A, #3, WAIT
    MOV A, #2
    RET

MOSTRAR_MSG_INICIAL:
    ; Se desejar, implemente com LCD
    RET
MOSTRAR_MSG_ACERTO:
    ; Se desejar, implemente com LCD
    RET
MOSTRAR_MSG_ERRO:
    ; Se desejar, implemente com LCD
    RET
MOSTRAR_MSG_VITORIA:
    ; Se desejar, implemente com LCD
    RET

DELAY_SIMPLES:
    MOV R0, #200
DL:
    NOP
    NOP
    DJNZ R0, DL
    RET

END

FIM_COMPARAR:
    RET

INICIALIZAR_LCD:
    RET
