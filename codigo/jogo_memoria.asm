ORG 0000H

INICIO:
    ACALL INICIALIZAR_LCD
    MOV R7, #0   ; semente do "random"

LOOP_JOGO:
    ; Gera número pseudoaleatório entre 0 e 2
    INC R7
    MOV A, R7
    ANL A, #03H   ; limita entre 0~3
    CJNE A, #03, OK
    MOV A, #2     ; se for 3, vira 2
OK:
    ; Limpa LEDs
    CLR P1.0
    CLR P1.1
    CLR P1.2

    ; Liga o LED correspondente
    CJNE A, #0, CHECA1
    SETB P1.0
    SJMP MOSTRAR
CHECA1:
    CJNE A, #1, CHECA2
    SETB P1.1
    SJMP MOSTRAR
CHECA2:
    SETB P1.2

MOSTRAR:
    ACALL DELAY_LED

    ; Apaga o LED
    CLR P1.0
    CLR P1.1
    CLR P1.2
    ACALL DELAY_LED

    ; Exibe "ERRO"
    MOV A, #01H
    ACALL COMANDO_LCD
    MOV A, #'E'
    ACALL ESCREVER_LCD
    MOV A, #'R'
    ACALL ESCREVER_LCD
    MOV A, #'R'
    ACALL ESCREVER_LCD
    MOV A, #'O'
    ACALL ESCREVER_LCD

    SJMP LOOP_JOGO

; ---------- LCD e DELAYS ----------

INICIALIZAR_LCD:
    ACALL DELAY_15MS
    MOV A, #028H
    ACALL COMANDO_LCD
    MOV A, #0CH
    ACALL COMANDO_LCD
    MOV A, #01H
    ACALL COMANDO_LCD
    MOV A, #06H
    ACALL COMANDO_LCD
    RET

COMANDO_LCD:
    CLR P3.5
    CLR P3.4
    ACALL ENVIAR_4BITS
    RET

ESCREVER_LCD:
    SETB P3.5
    CLR P3.4
    ACALL ENVIAR_4BITS
    RET

ENVIAR_4BITS:
    MOV R0, A
    ANL A, #0F0H
    MOV P1, A
    SETB P3.6
    ACALL PEQUENO_DELAY
    CLR P3.6
    ACALL PEQUENO_DELAY

    MOV A, R0
    SWAP A
    ANL A, #0F0H
    MOV P1, A
    SETB P3.6
    ACALL PEQUENO_DELAY
    CLR P3.6
    ACALL PEQUENO_DELAY
    RET

DELAY_LED:
    MOV R2, #2
DL2: MOV R1, #255
DL1: MOV R0, #255
DL0: DJNZ R0, DL0
    DJNZ R1, DL1
    DJNZ R2, DL2
    RET

DELAY_15MS:
    MOV R2, #5
D15_2: MOV R1, #255
D15_1: MOV R0, #255
D15_0: DJNZ R0, D15_0
    DJNZ R1, D15_1
    DJNZ R2, D15_2
    RET

PEQUENO_DELAY:
    MOV R1, #30
PD1: DJNZ R1, PD1
    RET

END
